{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterOS": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "defaultValue": "Windows",
      "metadata": {
        "description": "Select the cluster OS."
      }
    },
    "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Name of existing virtual network to use. Letters and numbers only"
        }
      },
      "existingVnetResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Name of the resourceGroup for the existing virtual network to deploy the scale set into."
        }
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Name of the existing subnet to deploy the scale set into."
        }
      },    
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "10.0.2.0/24",
        "metadata": {
          "description": "Subnet prefix for VMSS to connect to Service Fabric, e.g. 10.0.0.0/24"
        }
      },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "domainName": {
        "type": "string",
        "defaultValue": "QNXTCLOUD.COM",
        "metadata": {
          "description": "The Domain to Join"
        }
      },
      "domainJoinPassword": {
        "type": "string",
        "metadata": {
          "description": "The Domain Join Password"
        }
      },
      "domainAdmin": {
        "type": "string",
        "metadata": {
          "description": "The Domain Admin Username"
        }
      },
      "ouPath": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
         "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
        }      
    },
    "certificate": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Certificate as Base64 encoded string."
      }
    },
    "certificatePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Certificate password for installation."
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Certificate thumbprint for identification in the local certificate store."
      }
    },
    "appPort1": {
      "type": "int",
      "defaultValue": 80,
      "minValue": 1,
      "metadata": {
        "description": "Public accessible application port #1."
      }
    },
    "appPort2": {
      "type": "int",
      "defaultValue": 443,
      "minValue": 1,
      "metadata": {
        "description": "Public accessible application port #2."
      }
    },
    "euPort1":{
        "type": "int",
        "defaultValue": 8080,
        "minValue": 1,
        "metadata": {
            "description": "Public accessible application port #2."
        }    
    },
    "dhPort1":{
        "type": "int",
        "defaultValue": 8090,
        "minValue": 1,
        "metadata": {
            "description": "Public accessible application port #2."
        }    
    }
  },
  "variables": {
    "quickstartRepoRoot": "https://raw.githubusercontent.com/ryankmcintyre/Titans/master/",
    "clusterName": "[concat('sf-', toLower(uniqueString(resourceGroup().name)))]",
    "vaultName": "[concat('kv-', toLower(uniqueString(resourceGroup().name)))]",
    "vaultSecret": "ClusterCertificate",
    "loadBalancedAppPort1": "[parameters('appPort1')]",
    "loadBalancedAppPort2": "[parameters('appPort2')]",
    "loadBalancedEUPort1": "[parameters('euPort1')]",
    "loadBalancedDHPort1": "[parameters('dhPort1')]",
    "nt0InstanceCount": 5
  },
    "resources": [
        {
            "name": "[variables('vaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": false,
                "enabledForVolumeEncryption": false,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "name": "[concat(variables('vaultName'), '/', variables('vaultSecret'))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
            ],
            "properties": {
                "value": "[base64(concat('{ \"data\":\"', parameters('certificate'), '\", \"dataType\":\"pfx\", \"password\":\"', parameters('certificatePassword'), '\" }'))]"
            }
        },
        {
            "condition": "[equals(parameters('clusterOS'), 'Windows')]",
            "name": "[concat(deployment().name, '-QuickstartTemplate-Windows')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
            ],
            "properties": {
                "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(variables('quickstartRepoRoot'), 'qnxtcloud-5node-cluster.json')]",
                "contentVersion": "1.0.0.0"
              },
                "parameters": {
                    "clusterName": {
                        "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "existingVnetResourceGroupName": {
                        "value": "[parameters('existingVnetResourceGroupName')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('subnetPrefix')]"
                    },
                    "domainJoinPassword": {
                        "value": "[parameters('domainJoinPassword')]"
                    },
                    "domainAdmin": {
                        "value": "[parameters('domainAdmin')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    },
                    "vmImagePublisher": {
                        "value": "MicrosoftWindowsServer"
                    },
                    "vmImageOffer": {
                        "value": "WindowsServer"
                    },
                    "vmImageSku": {
                        "value": "2016-Datacenter-with-Containers"
                    },
                    "vmImageVersion": {
                        "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                        "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                        "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "loadBalancedEUPort1":{
                        "value": "[variables('loadBalancedEUPort1')]"
                    },
                    "loadBalancedDHPort1":{
                        "value": "[variables('loadBalancedDHPort1')]"
                    },
                    "certificateThumbprint": {
                        "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultResourceId": {
                        "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                        "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                        "value": "[variables('nt0InstanceCount')]"
                    },
                    "nodeDataDrive": {
                        "value": "OS"
                    }
                }
            }
        },
        {
            "condition": "[equals(parameters('clusterOS'), 'Linux')]",
            "name": "[concat(deployment().name, '-QuickstartTemplate-Linux')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), 'service-fabric-cluster-ubuntu-5-node-1-nodetype/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "clusterDnsName": {
                        "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "existingVnetResourceGroupName": {
                        "value": "[parameters('existingVnetResourceGroupName')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "domainJoinPassword": {
                        "value": "[parameters('domainJoinPassword')]"
                    },
                    "domainAdmin": {
                        "value": "[parameters('domainAdmin')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    },
                    "vmImagePublisher": {
                        "value": "Microsoft.Azure.ServiceFabric"
                    },
                    "vmImageOffer": {
                        "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                        "value": "16.04"
                    },
                    "vmImageVersion": {
                        "value": "6.0.11"
                    },
                    "loadBalancedAppPort1": {
                        "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                        "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "loadBalancedEUPort1":{
                        "value": "[variables('loadBalancedEUPort1')]"
                    },
                    "loadBalancedDHPort1":{
                        "value": "[variables('loadBalancedDHPort1')]"
                    },
                    "certificateThumbprint": {
                        "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultValue": {
                        "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                        "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                        "value": "[variables('nt0InstanceCount')]"
                    },
                    "nodeDataDrive": {
                        "value": "OS"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}